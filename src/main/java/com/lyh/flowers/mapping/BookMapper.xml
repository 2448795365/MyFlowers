<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.lyh.flowers.dao.IBookDao" >
  <resultMap id="BaseResultMap" type="com.lyh.flowers.pojo.Book" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="authorname" property="authorname" jdbcType="VARCHAR" />
    <result column="issuedate" property="issuedate" jdbcType="DATE" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="lastupdatetime" property="lastupdatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, bookName, authorname, issuedate,
    classify,description,status,createtime,lastupdatetime
  </sql>
  <select id="getAllList" resultMap="BaseResultMap" >
    select * from t_library_book
  </select>
  
  
   
  
   <select id="getAllListByLimit" resultMap="BaseResultMap"  parameterType="java.lang.Integer"  >
    select * from t_library_book limit #{0},#{1}
  </select>
  
  <select id="getAllListBySearch" resultMap="BaseResultMap"  parameterType="com.lyh.flowers.pojo.BookSelectType"  >
    select * from t_library_book where
      <if test="bookName != null" >
        bookName like CONCAT(CONCAT('%',#{bookName}),'%')  
      </if>
      <if test="authorName != null" >
       and authorName like CONCAT(CONCAT('%',#{authorName}),'%')
      </if>
      <if test="issueDate != null" >
        and issueDate like CONCAT(CONCAT('%',#{issueDate}),'%') 
      </if>
      <if test="classify != null" >
        and classify like CONCAT(CONCAT('%',#{classify}),'%') 
      </if>
      <if test="status != null" >
        and status like CONCAT(CONCAT('%',#{status}),'%') 
      </if>
     limit #{start},#{limit}
  </select>
  
  <select id="getAllBooksCount" resultType="java.lang.Integer">
    select count(*) from t_library_book 
  </select>
  
   <update id="changeStatus" >
    update t_library_book
    set status = #{0}
    where id = #{1}
    </update>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_library_book
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getEidtBookListBylimit" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from t_library_book
    where status !="3" 
    limit #{0},#{1}
  </select>
  
  <select id="getListCount" resultType="java.lang.Integer" >
    select 
    count(*)
    from t_library_book
    where status !="3"
  </select>
  
  
  
   <select id="getStatusCount" resultType="java.lang.Integer" >
    select 
    count(*)
    from t_library_book
    where status = #{status,jdbcType=VARCHAR}
  </select>
  
  
  <select id="slesctAllBooks" resultMap="BaseResultMap" parameterType="com.lyh.flowers.pojo.Book" >
    select 
    <include refid="Base_Column_List" />
    from t_library_book
  </select>
  
  
  <select id="slesctAvailBooks" resultMap="BaseResultMap" parameterType="com.lyh.flowers.pojo.Book" >
    select 
    <include refid="Base_Column_List" />
    from t_library_book
    where status != "6"
  </select>
 
  <select id="findByBookName" resultMap="BaseResultMap" parameterType="com.lyh.flowers.pojo.Book" >
    select *
    from t_library_book
    where bookname like CONCAT(CONCAT('%',#{bookname,jdbcType=VARCHAR}),'%')
  </select>
  
  <select id="findByBookAuthor" resultMap="BaseResultMap" parameterType="com.lyh.flowers.pojo.Book" >
    select *
    from t_library_book
    where authorname like CONCAT(CONCAT('%',#{authorname,jdbcType=VARCHAR}),'%')
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_library_book
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <select id="findByBookStatus" parameterType="java.lang.String" >
    select *
    from t_library_book
    where status = #{status,jdbcType=VARCHAR}
  </select>
  
  <select id="queryBooks" resultMap="BaseResultMap" >
    select *
    from t_library_book
    where (#{0}="-1"||bookname like CONCAT(CONCAT('%',#{0}),'%')) and (#{1}="-1"||authorname like CONCAT(CONCAT('%',#{1}),'%'))
    		and (#{2}="-1"||status=#{2}) and (#{3}="-1"||classify=#{3}) and (#{4}="-1"||issuedate=#{4}) 
    limit #{5},#{6} 
  </select>
  

  
  <insert id="insert" parameterType="com.lyh.flowers.pojo.Book" >
    insert into t_library_book (id, bookname, authorname, issuedate, classify, 
    description, status, createtime, lastupdatetime)
    values (#{id,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, #{authorname,jdbcType=VARCHAR}, 
      #{issuedate,jdbcType=DATE}, #{classify,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}, #{lastupdatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lyh.flowers.pojo.Book" >
    insert into t_library_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="authorname != null" >
        authorname,
      </if>
      <if test="issuedate != null" >
        issuedate,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="lastupdatetime != null" >
        lastupdatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="authorname != null" >
        #{authorname,jdbcType=VARCHAR},
      </if>
      <if test="issuedate != null" >
        #{issuedate,jdbcType=DATE},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="lastupdatetime != null" >
        #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyh.flowers.pojo.Book" >
    update t_library_book
    <set >
       <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="authorname != null" >
        authorname = #{authorname,jdbcType=VARCHAR},
      </if>
      <if test="issuedate != null" >
        issuedate = #{issuedate,jdbcType=DATE},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="lastupdatetime != null" >
        lastupdatetime = #{lastupdatetime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyh.flowers.pojo.Book" >
    update t_library_book
    set bookname = #{bookname,jdbcType=VARCHAR},
       authorname = #{authorname,jdbcType=VARCHAR},
       issuedate = #{issuedate,jdbcType=DATE},
       classify = #{classify,jdbcType=VARCHAR},
       description = #{description,jdbcType=VARCHAR},
       status = #{status,jdbcType=VARCHAR},
       createtime = #{createtime,jdbcType=DATE},
       lastupdatetime = #{lastupdatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>